#include "LGADDigi.hh"

//----------------------------------------------------------------------//
// Constructor                                                          //
//----------------------------------------------------------------------//
LGADDigi::LGADDigi(LGADSensorHit *h, LGADSignalShape *shape) {
    
    G4int det = h->GetDetectorID();
    G4int layer = h->GetLayerID();
    G4int lgad = h->GetLGADID();
     
    G4int padx = h->GetPadx();
    G4int pady = h->GetPady();
    G4double energy = h->GetEnergy();
    G4double time = h->GetTime();
    
    G4int detS = det << 19;
    G4int layerS = layer << 14;
    G4int lgadS = lgad << 8;
    G4int padxS = padx << 4;
    G4int padyS = pady;
    
    hitID = detS | layerS | lgadS | padxS | padyS;
    TOA = time;
    charge = 1.4 * energy;
    eventNumber = h->GetEventNumber();
    signalShape = shape;

};
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Get Det                                                              //
//----------------------------------------------------------------------//
G4int LGADDigi::GetDet() {

    G4int maskDet = 0b00000000111110000000000000000000;
    return (hitID & maskDet) >> 19;

}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Get Layer                                                            //
//----------------------------------------------------------------------//
G4int LGADDigi::GetLayer() {
 
    G4int maskLay = 0b00000000000001111100000000000000;
    return (hitID & maskLay) >> 14;
}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Get LGAD                                                             //
//----------------------------------------------------------------------//
G4int LGADDigi::GetLGAD() {
 
    G4int maskLGA = 0b00000000000000000011111100000000;
    return (hitID & maskLGA) >> 8;
}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Get Padx                                                             //
//----------------------------------------------------------------------//
G4int LGADDigi::GetPadx() {
  
    G4int maskpax = 0b00000000000000000000000011110000;
    return (hitID & maskpax) >> 4;
}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Get Pady                                                             //
//----------------------------------------------------------------------//
G4int LGADDigi::GetPady() {
  
    G4int maskpay = 0b00000000000000000000000000001111;
    return (hitID & maskpay);
}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//

//----------------------------------------------------------------------//
// Digitize                                                             //
//----------------------------------------------------------------------//
G4bool LGADDigi::Digitize() {
    
    std::pair<G4double, G4double> a = signalShape->getTimes(charge);
    TOA = a.first;
    TOT = a.second;
    if (TOA == 0 && TOT == 0) return false;
    return true;
}
//----------------------------------------------------------------------//
//----------------------------------------------------------------------//
  

